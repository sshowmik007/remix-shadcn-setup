{
  "version": 3,
  "sources": ["../../../app/components/dashboard/stat-card.tsx", "../../../app/routes/_index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\dashboard\\\\\\\\stat-card.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\dashboard\\\\stat-card.tsx\");\n  import.meta.hot.lastModified = \"1733189258728.1772\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nimport { Card } from '../ui/card';\nexport const StatCard = ({\n  title,\n  value,\n  icon,\n  description\n}) => {\n  return <Card className=\"p-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <p className=\"text-sm font-medium text-gray-500\">{title}</p>\n          <h3 className=\"text-2xl font-bold mt-1\">{value}</h3>\n          {description && <p className=\"text-sm text-gray-500 mt-1\">{description}</p>}\n        </div>\n        <div className=\"text-primary\">{icon}</div>\n      </div>\n    </Card>;\n};\n_c = StatCard;\nvar _c;\n$RefreshReg$(_c, \"StatCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\_index.tsx\");\n  import.meta.hot.lastModified = \"1733189289081.8245\";\n}\n// REMIX HMR END\n\nimport { Users, DollarSign, ShoppingCart, TrendingUp } from \"lucide-react\";\nimport { DashboardLayout } from \"~/components/dashboard/dashboard-layout\";\nimport { StatCard } from \"~/components/dashboard/stat-card\";\nexport const meta = () => {\n  return [{\n    title: \"Dashboard\"\n  }, {\n    name: \"description\",\n    content: \"Welcome to the dashboard\"\n  }];\n};\nexport default function Index() {\n  return <DashboardLayout>\n      <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n      \n        <StatCard title=\"Total Users\" value=\"1,234\" icon={<Users className=\"h-6 w-6\" />} description=\"+12% from last month\" />\n        <StatCard title=\"Revenue\" value=\"$45,231\" icon={<DollarSign className=\"h-6 w-6\" />} description=\"+8% from last month\" />\n        <StatCard title=\"Orders\" value=\"456\" icon={<ShoppingCart className=\"h-6 w-6\" />} description=\"+23% from last month\" />\n        <StatCard title=\"Growth\" value=\"+15%\" icon={<TrendingUp className=\"h-6 w-6\" />} description=\"Compared to last year\" />\n      </div>\n    </DashboardLayout>;\n}\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c"]
}
